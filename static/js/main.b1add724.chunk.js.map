{"version":3,"sources":["components/Form.js","components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","inputText","setInputText","todos","setTodos","setStatus","className","type","onChange","e","target","value","placeholder","onClick","preventDefault","length","text","completed","id","Math","random","name","Todo","todo","map","item","filter","el","TodoList","filteredTodos","App","useState","status","setFilteredTodos","useEffect","loadTodosFromLocalStorage","console","log","localStorage","getItem","filterHandler","saveTodosToLocalStorage","setItem","JSON","stringify","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b1add724.chunk.js","sourcesContent":["import React from 'react';\n\nconst Form = ({inputText, setInputText, todos, setTodos, setStatus}) => {\n  const inputTextHandler = (e) => {\n    setInputText(e.target.value);\n  }\n\n  const submitTodoHandler = (e) => {\n    e.preventDefault();\n    if (!(inputText.length > 0)) return;\n    setTodos([...todos, {text: inputText, completed: false, id: Math.random() * 1000}]);\n    setInputText('');\n  }\n\n  const statusHandler = (e) => {\n    setStatus(e.target.value);\n  }\n\n  return (\n    <form>\n      <div className=\"input-wrapper\">\n      <input type=\"text\" className=\"todo-input\" onChange={inputTextHandler} value={inputText} placeholder=\"Add Todo\"/>\n      <button className=\"todo-button\" type=\"submit\" onClick={submitTodoHandler}>\n        <i className=\"fas fa-plus\"></i>\n      </button>\n      </div>\n      <div className =\"select\">\n        <select name=\"todos\" className=\"filter-todo\" onChange={statusHandler}>\n          <option value=\"all\">All</option>\n          <option value=\"completed\">Done</option>\n          <option value=\"uncompleted\">Undone</option>\n        </select>\n      </div>\n    </form>\n  );\n};\n\nexport default Form;","import React from 'react';\n\nconst Todo = ({todo, todos, setTodos}) => {\n\n    const deleteHandler = (e) => {\n        setTodos(todos.filter(el => el.id !== todo.id));\n    }\n\n    const completeHandler = () =>  {\n        setTodos(todos.map(item => {\n            if(item.id === todo.id) {\n                return {...item, completed: ! item.completed}\n            }\n            return item;\n        }))\n    }\n\n    return(\n        <div className={`todo ${todo.completed ? 'completed' : ''}`}>\n            <button className=\"complete-btn \" onClick={completeHandler}>\n                <i className=\"fas fa-check\"></i>\n            </button>\n            <li className=\"todo-item\">{todo.text}</li>\n            <button className=\"trash-btn\" onClick={deleteHandler}>\n                <i className=\"fas fa-trash \"></i>\n            </button>\n        </div>\n    );\n}\n\nexport default Todo;","import React from 'react';\nimport Todo from './Todo';\n\nconst TodoList = ({todos, setTodos, filteredTodos}) => {\n    return(\n        <div className=\"todo-container\">\n        <ul className=\"todo-list\">\n          {filteredTodos.map(todo =>  (\n            <Todo todo={todo} todos={todos} setTodos={setTodos} key={todo.id}/>\n          ))}\n        </ul>\n      </div>\n    )\n}\n\nexport default TodoList;","import React, {useState, useEffect} from 'react';\nimport './App.scss';\nimport Form from './components/Form';\nimport TodoList from './components/TodoList';\n\nfunction App() {\n  const [inputText, setInputText] = useState('');\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState('all');\n  const [filteredTodos, setFilteredTodos] = useState([]);\n\n  // Run only once when app starts\n  useEffect(() => {\n    loadTodosFromLocalStorage();\n    console.log(localStorage.getItem('todos'));\n  }, []);\n\n  useEffect(() => {\n    filterHandler();\n    saveTodosToLocalStorage();\n  }, [todos, status]);\n\n  const filterHandler = () => {\n    switch(status) {\n      case 'completed' : setFilteredTodos(todos.filter(item => item.completed === true)); break;\n      case 'uncompleted' : setFilteredTodos(todos.filter(item => item.completed === false)); break;\n      default : setFilteredTodos(todos); break;\n    }\n  }\n\n  // Save to LocalStorage\n  const saveTodosToLocalStorage = () => {\n    if (localStorage.getItem('todos') === null) {\n      localStorage.setItem('todos', JSON.stringify([]));\n    } else {\n      localStorage.setItem('todos', JSON.stringify(todos));\n    }\n  }\n\n  // Load from LocalStorage\n  const loadTodosFromLocalStorage = () => {\n    if (localStorage.getItem('todos') !== null) {\n      setTodos(JSON.parse(localStorage.getItem('todos')));\n    }\n  }\n\n  return (\n    <>\n    <h1 className=\"main-heading\">Todo App with React</h1>\n    <div className=\"App\">\n      <Form todos={todos} setTodos={setTodos} inputText={inputText} setInputText={setInputText} setStatus={setStatus}  />\n      <TodoList todos={todos} setTodos={setTodos} filteredTodos={filteredTodos}/>\n    </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}